{"version":3,"sources":["assets/SpongeQR.png","common/Colors.ts","components/Header/HeaderStyles.tsx","components/Header/Header.tsx","spongeqr-core/SpongeQR.ts","components/RenderQR.tsx","spongeqr-core/PayloadTypes.ts","containers/App.tsx","index.tsx"],"names":["Colors","Purple","FrenchViolet","SlateBlue","TuftsBlue","BlueJeans","VividSkyBlue","SkyBlueCrayola","MediumTurquoise","Turquoise","Aquamarine","HeaderDiv","styled","div","LogoDiv","Nav","Header","src","Logo","alt","href","target","rel","SpongeQR","payload","canvas","renderOptions","QRCode","toCanvas","data","scale","margin","err","RenderQR","props","spongeQR","renderCanvas","useRef","style","paddingLeft","paddingTop","ref","onClick","current","console","error","generateQRFromPayload","Message","App","Helmet","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,MAA0B,qC,cCc1BA,EAbA,CACXC,OAAQ,UACRC,aAAc,UACdC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,aAAc,UACdC,eAAgB,UAChBC,gBAAiB,UACjBC,UAAW,UACXC,WAAY,W,2lCCRT,IAAMC,EAAYC,IAAOC,IAAV,IACEb,EAAOI,WAUlBU,EAAUF,IAAOC,IAAV,KAmBPE,EAAMH,IAAOC,IAAV,IAkBCb,EAAOC,QC/BTe,EAjBA,WACX,OACI,eAACL,EAAD,WACI,eAACG,EAAD,WACI,qBAAKG,IAAKC,EAAMC,IAAI,kBACpB,6CAGJ,eAACJ,EAAD,WACI,6BAAI,mBAAGK,KAAK,kDAAkDC,OAAO,SAASC,IAAI,sBAA9E,wBACJ,6BAAI,mBAAGF,KAAK,8CAA8CC,OAAO,SAASC,IAAI,sBAA1E,uBACJ,6BAAI,mBAAGF,KAAK,sEAAsEC,OAAO,SAASC,IAAI,sBAAlG,4B,gCCKLC,E,8GAfPC,EACAC,EACAC,GAEAC,IAAOC,SACHH,EACAD,EAAQK,KAFZ,OAGIH,QAHJ,IAGIA,IAAiB,CAAEI,MAAO,GAAIC,OAAQ,IACtC,SAACC,GACG,GAAIA,EAAK,MAAMA,S,KCehBC,EAvBE,SAACC,GACd,IAAMC,EAAW,IAAIZ,EACfC,EAAUU,EAAMV,QAChBY,EAAeC,iBAA0B,MAY/C,OACI,sBAAKC,MAAO,CAACC,YAAa,QAASC,WAAY,SAA/C,UACI,wBAAQC,IAAKL,IACb,wBAAQM,QAbW,WACvB,IAAMjB,EAASW,EAAaO,QAEzB,OAASlB,EAIZmB,QAAQC,MAAM,kDAHVV,EAASW,sBAAsBtB,EAASC,IASxC,6BCXCsB,EACT,WAAmBlB,GAAe,yBAAfA,QCsBRmB,EA5BH,WACR,OACI,qCACI,eAACC,EAAA,EAAD,WAEI,sBACI3B,IAAI,aACJF,KAAK,gFAET,sBACIE,IAAI,aACJF,KAAK,4DAIT,sBAAME,IAAI,aAAaF,KAAK,8BAC5B,sBACIA,KAAK,kEACLE,IAAI,kBAIZ,cAAC,EAAD,IACA,cAAC,EAAD,CAAUE,QAAS,IAAIuB,EAAQ,oBArBnC,QCJRG,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.d5959fe5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/SpongeQR.f7811fbe.png\";","// Color Palette - spectrum from Purple to Aquamarine\nconst Colors = {\n    Purple: '#7400B8',\n    FrenchViolet: '#6930C3',\n    SlateBlue: '#5E60CE',\n    TuftsBlue: '#5390D9',\n    BlueJeans: '#4EA8DE',\n    VividSkyBlue: '#48BFE3',\n    SkyBlueCrayola: '#56CFE1',\n    MediumTurquoise: '#64DFDF',\n    Turquoise: '#72EFDD',\n    Aquamarine: '#80FFDB'\n};\n\nexport default Colors;","import styled from \"styled-components\";\nimport Colors from \"../../common/Colors\";\n\nexport const HeaderDiv = styled.div`\n    background-color: ${Colors.TuftsBlue};\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n\n    box-shadow: 0 0.5em 20px grey;\n`;\n\nexport const LogoDiv = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    \n    font-family: 'Potta One', cursive;\n    \n    & img {\n        width: 7.5rem;\n        height: 7.5rem;\n    }\n\n    & h1 {\n        padding-left: 5.5vw;\n        font-size: 5em;\n        color: white;\n    }\n`;\n\nexport const Nav = styled.div`\n    display: flex;\n    justify-content: space-around;\n    margin-left: auto;\n\n    font-family: 'Potta One', cursive;\n\n    & h3 {\n        padding-top: 0.2vw;\n        padding-right: 12vw;\n        font-size: 2em;\n    }\n\n    & h3 a {\n        text-decoration: none;\n    }\n\n    & h3 a:hover {\n        color: ${Colors.Purple};\n    }\n\n    & h3 a:link, a:visited {\n        color: white;\n        text-decoration: none;\n    } \n`;","import Logo from \"../../assets/SpongeQR.png\";\nimport {HeaderDiv, LogoDiv, Nav} from \"../Header/HeaderStyles\";\n\nconst Header = () => {\n    return (\n        <HeaderDiv>\n            <LogoDiv>\n                <img src={Logo} alt=\"SpongeQR Logo\"></img>\n                <h1>SpongeQR</h1>\n            </LogoDiv>\n\n            <Nav>\n                <h3><a href=\"https://youugotssponged.github.io/spongeqr-web/\" target=\"_blank\" rel=\"noopener noreferrer\">Generate</a></h3>\n                <h3><a href=\"https://github.com/youugotssponged/SpongeQR\" target=\"_blank\" rel=\"noopener noreferrer\">Desktop</a></h3>\n                <h3><a href=\"https://github.com/youugotssponged/spongeqr-web/blob/main/README.md\" target=\"_blank\" rel=\"noopener noreferrer\">About</a></h3>\n            </Nav>\n        </HeaderDiv>\n    );\n};\n\nexport default Header;\n","import QRCode from \"qrcode\";\nimport { Payload } from \"./PayloadTypes\";\nclass SpongeQR {\n    public generateQRFromPayload(\n        payload: Payload,\n        canvas: HTMLCanvasElement,\n        renderOptions?: QRCode.QRCodeRenderersOptions\n    ): void {\n        QRCode.toCanvas(\n            canvas,\n            payload.data,\n            renderOptions ?? { scale: 10, margin: 0 },\n            (err) => {\n                if (err) throw err;\n            }\n        );\n    }\n}\n\nexport default SpongeQR;\n","import { useRef } from 'react';\n\nimport SpongeQR from '../spongeqr-core/SpongeQR';\nimport { Payload } from '../spongeqr-core/PayloadTypes';\n\nconst RenderQR = (props: { payload:  Payload}) => {\n    const spongeQR = new SpongeQR();\n    const payload = props.payload;\n    const renderCanvas = useRef<HTMLCanvasElement>(null);\n\n    const renderClickHandler = () => {\n        const canvas = renderCanvas.current;\n\n        if(null !== canvas) { // ensure canvas value is of the right type for typescript to work with.\n            spongeQR.generateQRFromPayload(payload, canvas);\n            return;\n        }\n        console.error(\"[RenderQR Component] - CANVAS NOT RENDERING...\");\n    }\n\n    return(\n        <div style={{paddingLeft: '100px', paddingTop: '100px'}}>\n            <canvas ref={renderCanvas} />\n            <button onClick={renderClickHandler}>Generate QR</button>\n        </div>\n    );\n}\n\nexport default RenderQR;","// types are compile time\n// function content is runtime\n// content runtime - function result compile time checks\n// Typeguard - https://basarat.gitbook.io/typescript/type-system/typeguard#user-defined-type-guards\n// export function isPayloadMultiFormat(arg: any): arg is PayloadMultiFormat {\n    //     return 'format' in arg;\n    // }\n    \nexport interface Payload {\n    data: string;\n};\n// Payload Types\nexport class Message implements Payload {\n    constructor(public data: string) {}\n}\n\nexport class URL implements Payload {\n    constructor(public data: string) {}\n}\n\nexport class Phone implements Payload {\n    constructor(public data: string) {}\n}\n\nexport class WIFI implements Payload {\n    public data: string;\n\n    constructor(private wifiData: {authType: string, ssid: string, password: string}) {\n        this.data = `WIFI:T:${wifiData.authType};S:${wifiData.ssid};P:${wifiData.password};`;\n    }\n}\n\nexport class Email implements Payload {\n    public data: string;\n\n    constructor(private emailData: {contact: string, subject: string, message: string}) {\n        this.data = `mailto:${emailData.contact}?subject=${emailData.subject}&body=${emailData.message}`;\n    }\n}\n","import \"./reset.css\";\nimport { Helmet } from \"react-helmet\";\nimport Header from \"../components/Header/Header\";\nimport RenderQR from \"../components/RenderQR\";\n\nimport { Message } from \"../spongeqr-core/PayloadTypes\";\n\nconst App = () => {\n    return (\n        <>\n            <Helmet>\n                {/* React - Material UI Includes */}\n                <link\n                    rel=\"stylesheet\"\n                    href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n                />\n                <link\n                    rel=\"stylesheet\"\n                    href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n                />\n\n                {/* Google font - Potta One */}\n                <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n                <link\n                    href=\"https://fonts.googleapis.com/css2?family=Potta+One&display=swap\"\n                    rel=\"stylesheet\"\n                />\n            </Helmet>\n\n            <Header />\n            <RenderQR payload={new Message(\"Hello SPONGEQR\")} />;\n        </>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}