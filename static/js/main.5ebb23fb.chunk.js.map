{"version":3,"sources":["assets/SpongeQR.png","common/Colors.ts","components/Header/HeaderStyles.tsx","components/Header/Header.tsx","components/Input/InputStyles.tsx","components/Input/InputMessage/InputMessage.tsx","components/Input/InputEmail/InputEmail.tsx","components/Input/InputWIFI/InputWIFI.tsx","components/Input/InputPhone/InputPhone.tsx","components/Input/InputURL/InputURL.tsx","components/Input/Input.tsx","spongeqr-core/SpongeQR.ts","components/RenderQR/RenderQR.tsx","components/Body/BodyStyles.tsx","spongeqr-core/PayloadTypes.ts","components/Body/Body.tsx","containers/App.tsx","index.tsx"],"names":["Colors","Purple","FrenchViolet","SlateBlue","TuftsBlue","BlueJeans","VividSkyBlue","SkyBlueCrayola","MediumTurquoise","Turquoise","Aquamarine","HeaderDiv","styled","div","LogoDiv","Nav","Header","src","Logo","alt","href","target","rel","InputAreaStyle","InputMessage","id","label","variant","fullWidth","InputEmail","style","marginTop","TextareaAutosize","height","rowsMax","placeholder","InputWIFI","InputPhone","InputURL","Input","useState","dropOption","setDropOption","Select","labelId","value","onChange","event","MenuItem","console","error","decidePayload","Button","color","onClick","SpongeQR","payload","canvas","renderOptions","QRCode","toCanvas","data","scale","margin","err","RenderQR","props","spongeQR","renderCanvas","useRef","paddingLeft","paddingTop","ref","width","current","generateQRFromPayload","BodyDiv","Message","Body","App","Helmet","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ebb23fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/SpongeQR.f7811fbe.png\";","// Color Palette - spectrum from Purple to Aquamarine\nconst Colors = {\n    Purple: '#7400B8',\n    FrenchViolet: '#6930C3',\n    SlateBlue: '#5E60CE',\n    TuftsBlue: '#5390D9',\n    BlueJeans: '#4EA8DE',\n    VividSkyBlue: '#48BFE3',\n    SkyBlueCrayola: '#56CFE1',\n    MediumTurquoise: '#64DFDF',\n    Turquoise: '#72EFDD',\n    Aquamarine: '#80FFDB'\n};\n\nexport default Colors;","import styled from \"styled-components\";\nimport Colors from \"../../common/Colors\";\n\nexport const HeaderDiv = styled.div`\n    background-color: ${Colors.TuftsBlue};\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n\n    box-shadow: 0 0.5em 20px grey;\n`;\n\nexport const LogoDiv = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    \n    font-family: 'Potta One', cursive;\n    \n    & img {\n        width: 7.5rem;\n        height: 7.5rem;\n    }\n\n    & h1 {\n        padding-left: 5.5vw;\n        font-size: 5em;\n        color: white;\n    }\n`;\n\nexport const Nav = styled.div`\n    display: flex;\n    justify-content: space-around;\n    margin-left: auto;\n\n    font-family: 'Potta One', cursive;\n\n    & h3 {\n        padding-top: 0.2vw;\n        padding-right: 12vw;\n        font-size: 2em;\n    }\n\n    & h3 a {\n        text-decoration: none;\n    }\n\n    & h3 a:hover {\n        color: yellow;\n    }\n\n    & h3 a:link, a:visited {\n        color: white;\n        text-decoration: none;\n    } \n`;","import Logo from \"../../assets/SpongeQR.png\";\nimport { HeaderDiv, LogoDiv, Nav } from \"../Header/HeaderStyles\";\n\nconst Header = () => {\n    return (\n        <HeaderDiv>\n            <LogoDiv>\n                <img src={Logo} alt=\"SpongeQR Logo\"></img>\n                <h1>SpongeQR</h1>\n            </LogoDiv>\n\n            <Nav>\n                <h3>\n                    <a\n                        href=\"https://youugotssponged.github.io/spongeqr-web/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        Generate\n                    </a>\n                </h3>\n                <h3>\n                    <a\n                        href=\"https://github.com/youugotssponged/SpongeQR\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        Desktop\n                    </a>\n                </h3>\n                <h3>\n                    <a\n                        href=\"https://github.com/youugotssponged/spongeqr-web/blob/main/README.md\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        About\n                    </a>\n                </h3>\n            </Nav>\n        </HeaderDiv>\n    );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const InputAreaStyle = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 30vw;\n    padding-left: 5vw;\n    padding-top: 5vh;\n\n    & #generate, #clear {\n        margin-top: 1vh;\n    }\n\n`","import TextField from \"@material-ui/core/TextField/TextField\";\n\nconst InputMessage = () => {\n    return (\n        <>\n            <TextField\n                id=\"outlined-basic\"\n                label=\"Your message...\"\n                variant=\"filled\"\n                fullWidth\n            />\n        </>\n    );\n};\n\nexport default InputMessage;\n","import TextField from \"@material-ui/core/TextField/TextField\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\n\nconst InputEmail = () => {\n    return (\n        <>\n            <TextField\n                style={{ marginTop: \"20px\" }}\n                id=\"outlined-basic\"\n                label=\"Contact Email\"\n                variant=\"filled\"\n                fullWidth\n            />\n\n            <TextField\n                style={{ marginTop: \"20px\" }}\n                id=\"outlined-basic\"\n                label=\"Subject\"\n                variant=\"filled\"\n                fullWidth\n            />\n\n            <TextareaAutosize\n                style={{ marginTop: \"20px\", height: \"200px\" }}\n                rowsMax={20}\n                placeholder=\"Email Message Body\"\n            />\n        </>\n    );\n};\n\nexport default InputEmail;\n","import TextField from \"@material-ui/core/TextField/TextField\";\n\nconst InputWIFI = () => {\n    return (\n        <>\n            <TextField\n                style={{ marginTop: \"20px\" }}\n                id=\"outlined-basic\"\n                label=\"SSID\"\n                variant=\"filled\"\n                fullWidth\n            />\n\n            <TextField\n                style={{ marginTop: \"20px\" }}\n                id=\"outlined-basic\"\n                label=\"Auth Type\"\n                variant=\"filled\"\n                fullWidth\n            />\n\n            <TextField\n                style={{ marginTop: \"20px\" }}\n                id=\"outlined-basic\"\n                label=\"Password\"\n                variant=\"filled\"\n                fullWidth\n            />\n        </>\n    );\n};\n\nexport default InputWIFI;\n","import TextField from \"@material-ui/core/TextField/TextField\";\n\nconst InputPhone = () => {\n    return (\n        <>\n            <TextField\n                id=\"outlined-basic\"\n                label=\"The Phone Number...\"\n                variant=\"filled\"\n                fullWidth\n            />\n        </>\n    );\n};\n\nexport default InputPhone;\n","import TextField from \"@material-ui/core/TextField/TextField\";\n\nconst InputURL = () => {\n    return (\n    <>\n        <TextField\n            id=\"outlined-basic\"\n            label=\"Your URL...\"\n            variant=\"filled\"\n            fullWidth\n        />\n    </>)\n}\n\nexport default InputURL;","import { useState } from \"react\";\n\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { InputAreaStyle } from \"./InputStyles\";\n\nimport InputMessage from \"./InputMessage/InputMessage\";\nimport InputEmail from \"./InputEmail/InputEmail\";\nimport InputWIFI from \"./InputWIFI/InputWIFI\";\nimport InputPhone from \"./InputPhone/InputPhone\";\nimport InputURL from \"./InputURL/InputURL\";\n\nconst Input = () => {\n\n    const [dropOption, setDropOption] = useState(1);\n    const payloadChangeHandler = (event: any) => {\n        setDropOption(event.target.value);\n    }\n\n    // Generates to the canvas\n    const generateQRHandler = () => {}\n\n    // clears canvas\n    const clearQRHandler = () => {}\n\n\n    const decidePayload = () => {\n        switch (dropOption) {\n            case 1:\n                return <InputMessage />;\n            case 2:\n                return <InputURL />;\n            case 3:\n                return <InputPhone />;\n            case 4:\n                return <InputWIFI />;\n            case 5:\n                return <InputEmail />;\n            default:\n                console.error(\"Payload Component Null or not Mounted :(\");\n        }\n    }\n\n    return (\n        <InputAreaStyle>\n            <Select\n                labelId=\"Payload Dropdown\"\n                id=\"Dropdown\"\n                value={dropOption}\n                onChange={payloadChangeHandler}\n            >\n                <MenuItem value={1}>Message</MenuItem>\n                <MenuItem value={2}>URL</MenuItem>\n                <MenuItem value={3}>Phone</MenuItem>\n                <MenuItem value={4}>WIFI</MenuItem>\n                <MenuItem value={5}>Email</MenuItem>\n            </Select>\n\n            {decidePayload()}\n\n            <Button\n                id=\"generate\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={generateQRHandler}\n            >\n                Generate QR\n            </Button>\n\n            <Button\n                id=\"clear\"\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={clearQRHandler}\n            >\n                Clear\n            </Button>\n        </InputAreaStyle>\n    );\n};\n\nexport default Input;\n","import QRCode from \"qrcode\";\nimport { Payload } from \"./PayloadTypes\";\nclass SpongeQR {\n    public generateQRFromPayload(\n        payload: Payload,\n        canvas: HTMLCanvasElement,\n        renderOptions?: QRCode.QRCodeRenderersOptions\n    ): void {\n        QRCode.toCanvas(\n            canvas,\n            payload.data,\n            renderOptions ?? { scale: 10, margin: 0 },\n            (err) => {\n                if (err) throw err;\n            }\n        );\n    }\n}\n\nexport default SpongeQR;\n","import { useRef } from 'react';\n\nimport SpongeQR from '../../spongeqr-core/SpongeQR';\nimport { Payload } from '../../spongeqr-core/PayloadTypes';\n\nconst RenderQR = (props: { payload:  Payload}) => {\n    const spongeQR = new SpongeQR();\n    const payload = props.payload;\n    const renderCanvas = useRef<HTMLCanvasElement>(null);\n\n    const renderClickHandler = () => {\n        const canvas = renderCanvas.current;\n\n        if(null !== canvas) { // ensure canvas value is of the right type for typescript to work with.\n            spongeQR.generateQRFromPayload(payload, canvas);\n            return;\n        }\n        console.error(\"[RenderQR Component] - CANVAS NOT RENDERING...\");\n    }\n\n    return(\n        <div style={{paddingLeft: '100px', paddingTop: '100px'}}>\n            <canvas ref={renderCanvas} style={{width: \"200px\", height: \"200px\"}} />\n            <button onClick={renderClickHandler}>Generate QR</button>\n        </div>\n    );\n}\n\nexport default RenderQR;","import styled from \"styled-components\";\n\nexport const BodyDiv = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;","// types are compile time\n// function content is runtime\n// content runtime - function result compile time checks\n// Typeguard - https://basarat.gitbook.io/typescript/type-system/typeguard#user-defined-type-guards\n// export function isPayloadMultiFormat(arg: any): arg is PayloadMultiFormat {\n    //     return 'format' in arg;\n    // }\n    \nexport interface Payload {\n    data: string;\n};\n// Payload Types\nexport class Message implements Payload {\n    constructor(public data: string) {}\n}\n\nexport class URL implements Payload {\n    constructor(public data: string) {}\n}\n\nexport class Phone implements Payload {\n    constructor(public data: string) {}\n}\n\nexport class WIFI implements Payload {\n    public data: string;\n\n    constructor(private wifiData: {authType: string, ssid: string, password: string}) {\n        this.data = `WIFI:T:${wifiData.authType};S:${wifiData.ssid};P:${wifiData.password};`;\n    }\n}\n\nexport class Email implements Payload {\n    public data: string;\n\n    constructor(private emailData: {contact: string, subject: string, message: string}) {\n        this.data = `mailto:${emailData.contact}?subject=${emailData.subject}&body=${emailData.message}`;\n    }\n}\n","import Input from \"../Input/Input\";\nimport RenderQR from \"../RenderQR/RenderQR\";\nimport {BodyDiv} from \"./BodyStyles\";\nimport {Message} from \"../../spongeqr-core/PayloadTypes\";\n\nconst Body = () =>{\n    return (\n        <BodyDiv>\n            <Input />\n            <RenderQR payload={new Message(\"Poggers\")}/>\n        </BodyDiv>\n    );\n}\n\n\nexport default Body;","import \"./reset.css\";\nimport { Helmet } from \"react-helmet\";\n\nimport Header from \"../components/Header/Header\";\nimport Body from \"../components/Body/Body\";\n\n\nconst App = () => {\n    return (\n        <>\n            <Helmet>\n                {/* React - Material UI Includes */}\n                <link\n                    rel=\"stylesheet\"\n                    href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n                />\n                <link\n                    rel=\"stylesheet\"\n                    href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n                />\n\n                {/* Google font - Potta One */}\n                <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n                <link\n                    href=\"https://fonts.googleapis.com/css2?family=Potta+One&display=swap\"\n                    rel=\"stylesheet\"\n                />\n            </Helmet>\n\n            <Header />\n\n            <Body />\n\n\n            {/**<RenderQR payload={new Message(\"Hello SPONGEQR\")} />;**/}\n        </>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}